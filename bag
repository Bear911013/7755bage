<!DOCTYPE html>
<html lang="zh-Hant">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>聊天紀錄查看器</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: #f0f0f0;
    }

    .container {
      width: 100%;
      max-width: 1200px;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin-top: 20px;
    }

    input[type="file"] {
      margin-bottom: 20px;
    }

    #chatContainer {
      width: 100%;
      max-height: 500px;
      overflow-y: auto;
      margin-top: 10px;
      border-top: 1px solid #ddd;
      padding-top: 10px;
    }

    .chat-entry {
      padding: 10px;
      margin-bottom: 10px;
      background-color: #f9f9f9;
      border-radius: 5px;
    }

    .chat-entry.player {
      background-color: #e0f7fa;
    }

    .timestamp {
      font-size: 12px;
      color: #888;
    }

    .name-box {
      font-weight: bold;
      margin-top: 5px;
    }

    .text-box {
      margin-top: 5px;
      word-wrap: break-word;
    }

    .highlight {
      background-color: yellow;
    }

    .controls {
      margin-top: 20px;
      display: flex;
      justify-content: space-between;
      width: 100%;
    }

    .search-bar {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-bar input {
      margin-left: 10px;
    }

    .match-count {
      font-size: 14px;
      color: #555;
    }

    .button {
      padding: 10px 15px;
      background-color: #007BFF;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .button:hover {
      background-color: #0056b3;
    }

    .button:disabled {
      background-color: #ddd;
      cursor: not-allowed;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>聊天紀錄查看器</h1>
    <input type="file" id="fileInput">
    
    <!-- 搜索欄 -->
    <div class="search-bar">
      <input type="text" id="searchInput" placeholder="搜尋聊天內容...">
      <button id="toggleSearch" class="button">顯示/隱藏搜尋</button>
      <span id="matchCountLabel" class="match-count">(共 0 筆)</span>
    </div>
    
    <!-- 顯示聊天內容 -->
    <div id="chatContainer"></div>
    
    <!-- 控制面板 -->
    <div class="controls">
      <button id="prevBtn" class="button" disabled>上一筆</button>
      <input type="number" id="matchIndexInput" value="1" min="1" readonly>
      <button id="nextBtn" class="button" disabled>下一筆</button>
      <button id="downloadXlsx" class="button">下載 XLSX</button>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
  <script>
    const fileInput = document.getElementById('fileInput');
    const chatContainer = document.getElementById('chatContainer');
    const searchInput = document.getElementById('searchInput');
    const matchCountLabel = document.getElementById('matchCountLabel');
    const matchIndexInput = document.getElementById('matchIndexInput');
    const nextBtn = document.getElementById('nextBtn');
    const prevBtn = document.getElementById('prevBtn');
    const downloadXlsxBtn = document.getElementById('downloadXlsx');
    const toggleSearchBtn = document.getElementById('toggleSearch');
    const playerNameInput = document.createElement('input');
    
    let allMessages = [];
    let searchMatches = [];
    let currentMatchIndex = 0;
    let playerName = "玩家";
    
    // 檢查 localStorage 是否有記錄上次的檔案
    window.addEventListener('load', () => {
      const lastFileName = localStorage.getItem('lastFileName');
      if (lastFileName) {
        console.log(`上次選擇的檔案是: ${lastFileName}`);
      }
    });

    fileInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = function (e) {
        const content = e.target.result;
        const blocks = content.split(/\n(?=\[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\])/g);
        allMessages = [];

        blocks.forEach(block => {
          const match = block.match(/^\[(.*?)\] (.*?):\s*([\s\S]*)$/);
          if (match) {
            const [, timestamp, name, text] = match;
            allMessages.push({
              timestamp: timestamp.trim(),
              name: name.trim(),
              text: text.trim()
            });
          }
        });

        localStorage.setItem('lastFileName', file.name); // 儲存檔案名稱
        renderChat();
      };
      
      reader.readAsText(file);
    });

    // 渲染聊天紀錄
    function renderChat() {
      const filter = document.querySelector('input[name="filter"]:checked')?.value || 'all';
      chatContainer.innerHTML = "";

      allMessages.forEach((msg, index) => {
        const isPlayer = msg.name === "undefined";
        const displayName = isPlayer ? playerName : msg.name;

        const entry = document.createElement("div");
        entry.className = "chat-entry" + (isPlayer ? " player" : "");

        const timestamp = document.createElement("div");
        timestamp.className = "timestamp";
        timestamp.textContent = msg.timestamp;

        const nameBox = document.createElement("div");
        nameBox.className = "name-box";
        nameBox.textContent = displayName;

        const textBox = document.createElement("div");
        textBox.className = "text-box";
        textBox.textContent = msg.text;
        textBox.dataset.index = index;

        entry.appendChild(timestamp);
        entry.appendChild(nameBox);
        entry.appendChild(textBox);
        chatContainer.appendChild(entry);
      });

      highlightMatches();
    }

    // 高亮顯示搜尋結果
    function highlightMatches() {
      searchMatches = [];
      const keyword = searchInput.value.trim().toLowerCase();
      if (!keyword) {
        matchCountLabel.textContent = `(共 0 筆)`;
        matchIndexInput.value = 1;
        return;
      }

      const boxes = chatContainer.querySelectorAll('.text-box');
      boxes.forEach((box, index) => {
        const text = box.textContent;
        if (text.toLowerCase().includes(keyword)) {
          const regex = new RegExp(`(${keyword})`, 'gi');
          box.innerHTML = text.replace(regex, '<span class="highlight">$1</span>');
          searchMatches.push(box);
        }
      });

      matchCountLabel.textContent = `(共 ${searchMatches.length} 筆)`;
      matchIndexInput.max = searchMatches.length || 1;
      matchIndexInput.value = Math.min(currentMatchIndex + 1, searchMatches.length) || 1;
      scrollToCurrentMatch();
    }

    // 滾動到當前匹配結果
    function scrollToCurrentMatch() {
      if (searchMatches.length === 0) return;
      const box = searchMatches[currentMatchIndex];
      box.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }

    searchInput.addEventListener('input', () => {
      currentMatchIndex = 0;
      highlightMatches();
    });

    nextBtn.addEventListener('click', () => {
      if (searchMatches.length === 0) return;
      currentMatchIndex = (currentMatchIndex + 1) % searchMatches.length;
      matchIndexInput.value = currentMatchIndex + 1;
      scrollToCurrentMatch();
    });

    prevBtn.addEventListener('click', () => {
      if (searchMatches.length === 0) return;
      currentMatchIndex = (currentMatchIndex - 1 + searchMatches.length) % searchMatches.length;
      matchIndexInput.value = currentMatchIndex + 1;
      scrollToCurrentMatch();
    });

    // 下載 Excel 檔案
    downloadXlsxBtn.addEventListener('click', () => {
      if (allMessages.length === 0) {
        alert('請先上傳聊天紀錄檔案！');
        return;
      }

      const ws = XLSX.utils.aoa_to_sheet([['時間戳記', '名稱', '訊息']]);
      allMessages.forEach(msg => {
        XLSX.utils.sheet
